
# sources already added in Dockerfile
#cd /root/ && git clone https://chromium.googlesource.com/webm/libwebp && git checkout v1.3.1 
cd /root/libwebp/ && git apply /root/afl_instrumentation.diff
cd /root/libwebp/ && ./autogen.sh && CC=afl-clang-fast ./configure

# build different instrumented versions
# adding the allowlist from vanhauser
AFL_LLVM_ALLOWLIST=/root/libwebp.list                    make clean all && cp -r /root/libwebp /root/dwebp_afl
AFL_LLVM_ALLOWLIST=/root/libwebp.list AFL_USE_ASAN=1     make clean all && cp -r /root/libwebp /root/dwebp_afl_asan
AFL_LLVM_ALLOWLIST=/root/libwebp.list AFL_LLVM_LAF_ALL=1 make clean all && cp -r /root/libwebp /root/dwebp_afl_compcov
AFL_LLVM_ALLOWLIST=/root/libwebp.list AFL_LLVM_CMPLOG=1  make clean all && cp -r /root/libwebp /root/dwebp_afl_cmplog

mkdir /tmp/in/
mkdir /pwd/out/
rm -rf /pwd/out/*

# get the input files for the fuzzer
wget https://www.gstatic.com/webp/gallery/1.webp -O /tmp/in/1.webp
wget https://www.gstatic.com/webp/gallery/2.webp -O /tmp/in/2.webp
wget https://www.gstatic.com/webp/gallery/3.webp -O /tmp/in/3.webp
wget https://www.gstatic.com/webp/gallery/4.webp -O /tmp/in/4.webp
wget https://www.gstatic.com/webp/gallery/5.webp -O /tmp/in/5.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_01.webp -O /tmp/in/test_01.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_02.webp -O /tmp/in/test_02.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_03.webp -O /tmp/in/test_03.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_04.webp -O /tmp/in/test_04.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_05.webp -O /tmp/in/test_05.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_06_lossless.webp -O /tmp/in/test_06_lossless.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_06_lossy.webp -O /tmp/in/test_06_lossy.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_07_lossless.webp -O /tmp/in/test_07_lossless.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_07_lossy.webp -O /tmp/in/test_07_lossy.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_08_lossless.webp -O /tmp/in/test_08_lossless.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_08_lossy.webp -O /tmp/in/test_08_lossy.webp
wget https://raw.githubusercontent.com/signalapp/Signal-Android/main/glide-webp/app/src/main/assets/test_09_large.webp -O /tmp/in/test_09_large.webp

# start the fuzzers in a screen
# webp binary expects the webp library, so we also have to set the LD_LIBRARY_PATH for the target binary
AFL_TARGET_ENV='LD_LIBRARY_PATH="/root/dwebp_afl/src/demux/.libs:/root/dwebp_afl/src/.libs:/root/dwebp_afl/sharpyuv/.libs:$LD_LIBRARY_PATH"'                           screen -S master -d -m afl-fuzz -i /tmp/in -o /pwd/out -M master /root/dwebp_afl/examples/.libs/dwebp -v @@
AFL_TARGET_ENV='LD_LIBRARY_PATH="/root/dwebp_afl_asan/src/demux/.libs:/root/dwebp_afl_asan/src/.libs:/root/dwebp_afl_asan/sharpyuv/.libs:$LD_LIBRARY_PATH"'            screen -S asan1 -d -m afl-fuzz -i /tmp/in -o /pwd/out -S asan1 /root/dwebp_afl_asan/examples/.libs/dwebp -v @@ 
AFL_TARGET_ENV='LD_LIBRARY_PATH="/root/dwebp_afl_ngram/src/demux/.libs:/root/dwebp_afl_ngram/src/.libs:/root/dwebp_afl_ngram/sharpyuv/.libs:$LD_LIBRARY_PATH"'         screen -S asan2 -d -m afl-fuzz -i /tmp/in -o /pwd/out -S asan2 /root/dwebp_afl_ngram/examples/.libs/dwebp -v @@ 
AFL_TARGET_ENV='LD_LIBRARY_PATH="/root/dwebp_afl_compcov/src/demux/.libs:/root/dwebp_afl_compcov/src/.libs:/root/dwebp_afl_compcov/sharpyuv/.libs:$LD_LIBRARY_PATH"'   screen -S compcov -d -m afl-fuzz -i /tmp/in -o /pwd/out -S compcov /root/dwebp_afl_compcov/examples/.libs/dwebp -v @@ 
AFL_TARGET_ENV='LD_LIBRARY_PATH="/root/dwebp_afl/src/demux/.libs:/root/dwebp_afl/src/.libs:/root/dwebp_afl/sharpyuv/.libs:$LD_LIBRARY_PATH"'                           screen -S cmplog1 -d -m afl-fuzz -i /tmp/in -o /pwd/out -S cmplog1 -c /root/dwebp_afl_cmplog/examples/.libs/dwebp -l2at -- /root/dwebp_afl/examples/.libs/dwebp -v @@ 
AFL_TARGET_ENV='LD_LIBRARY_PATH="/root/dwebp_afl/src/demux/.libs:/root/dwebp_afl/src/.libs:/root/dwebp_afl/sharpyuv/.libs:$LD_LIBRARY_PATH"'                           screen -S cmplog2 -d -m afl-fuzz -i /tmp/in -o /pwd/out -S cmplog2 -c /root/dwebp_afl_cmplog/examples/.libs/dwebp -l3a -- /root/dwebp_afl/examples/.libs/dwebp -v @@ 

sleep 5

screen -ls